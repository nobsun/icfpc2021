{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE BangPatterns #-}
{-# LANGUAGE ScopedTypeVariables #-}
module Bonus where

import Data.Aeson
import System.FilePath
import Text.Printf
import qualified Data.Graph.Inductive as G
import Parser as P
import Graph

{- | 
>>> path = "data/problems"
>>> bonusdepg = getBonusDeps path 106
>>> G.labEdges <$> bonusdepg
[(1,35,BonusDef {position = Point {x = 62, y = 46}, bonus = GLOBALIST, problem = 35}),(2,39,BonusDef {position = Point {x = 75, y = 5}, bonus = BREAK_A_LEG, problem = 39}),(3,60,BonusDef {position = Point {x = 45, y = 110}, bonus = GLOBALIST, problem = 60}),(4,63,BonusDef {position = Point {x = 95, y = 26}, bonus = BREAK_A_LEG, problem = 63}),(5,78,BonusDef {position = Point {x = 99, y = 71}, bonus = BREAK_A_LEG, problem = 78}),(6,16,BonusDef {position = Point {x = 183, y = 61}, bonus = GLOBALIST, problem = 16}),(7,12,BonusDef {position = Point {x = 65, y = 1}, bonus = GLOBALIST, problem = 12}),(8,6,BonusDef {position = Point {x = 90, y = 19}, bonus = BREAK_A_LEG, problem = 6}),(9,14,BonusDef {position = Point {x = 119, y = 5}, bonus = BREAK_A_LEG, problem = 14}),(10,62,BonusDef {position = Point {x = 26, y = 86}, bonus = GLOBALIST, problem = 62}),(11,31,BonusDef {position = Point {x = 5, y = 5}, bonus = BREAK_A_LEG, problem = 31}),(12,67,BonusDef {position = Point {x = 42, y = 2}, bonus = BREAK_A_LEG, problem = 67}),(13,46,BonusDef {position = Point {x = 20, y = 20}, bonus = GLOBALIST, problem = 46}),(14,57,BonusDef {position = Point {x = 5, y = 5}, bonus = BREAK_A_LEG, problem = 57}),(15,41,BonusDef {position = Point {x = 16, y = 28}, bonus = GLOBALIST, problem = 41}),(16,8,BonusDef {position = Point {x = 16, y = 19}, bonus = BREAK_A_LEG, problem = 8}),(17,84,BonusDef {position = Point {x = 24, y = 24}, bonus = GLOBALIST, problem = 84}),(18,72,BonusDef {position = Point {x = 17, y = 10}, bonus = GLOBALIST, problem = 72}),(19,32,BonusDef {position = Point {x = 34, y = 32}, bonus = GLOBALIST, problem = 32}),(20,49,BonusDef {position = Point {x = 20, y = 20}, bonus = GLOBALIST, problem = 49}),(21,17,BonusDef {position = Point {x = 4, y = 22}, bonus = GLOBALIST, problem = 17}),(22,74,BonusDef {position = Point {x = 47, y = 18}, bonus = GLOBALIST, problem = 74}),(23,18,BonusDef {position = Point {x = 28, y = 46}, bonus = BREAK_A_LEG, problem = 18}),(24,73,BonusDef {position = Point {x = 46, y = 21}, bonus = BREAK_A_LEG, problem = 73}),(25,30,BonusDef {position = Point {x = 26, y = 68}, bonus = BREAK_A_LEG, problem = 30}),(26,19,BonusDef {position = Point {x = 53, y = 58}, bonus = BREAK_A_LEG, problem = 19}),(27,23,BonusDef {position = Point {x = 0, y = 40}, bonus = BREAK_A_LEG, problem = 23}),(28,65,BonusDef {position = Point {x = 28, y = 40}, bonus = GLOBALIST, problem = 65}),(29,58,BonusDef {position = Point {x = 3, y = 0}, bonus = GLOBALIST, problem = 58}),(30,10,BonusDef {position = Point {x = 0, y = 5}, bonus = BREAK_A_LEG, problem = 10}),(31,75,BonusDef {position = Point {x = 57, y = 66}, bonus = GLOBALIST, problem = 75}),(32,29,BonusDef {position = Point {x = 26, y = 1}, bonus = BREAK_A_LEG, problem = 29}),(33,53,BonusDef {position = Point {x = 12, y = 53}, bonus = BREAK_A_LEG, problem = 53}),(34,4,BonusDef {position = Point {x = 20, y = 52}, bonus = BREAK_A_LEG, problem = 4}),(35,47,BonusDef {position = Point {x = 16, y = 19}, bonus = GLOBALIST, problem = 47}),(36,82,BonusDef {position = Point {x = 36, y = 26}, bonus = BREAK_A_LEG, problem = 82}),(37,15,BonusDef {position = Point {x = 27, y = 27}, bonus = BREAK_A_LEG, problem = 15}),(38,76,BonusDef {position = Point {x = 32, y = 48}, bonus = GLOBALIST, problem = 76}),(39,37,BonusDef {position = Point {x = 27, y = 86}, bonus = GLOBALIST, problem = 37}),(40,45,BonusDef {position = Point {x = 40, y = 26}, bonus = GLOBALIST, problem = 45}),(41,54,BonusDef {position = Point {x = 30, y = 35}, bonus = GLOBALIST, problem = 54}),(42,79,BonusDef {position = Point {x = 56, y = 2}, bonus = BREAK_A_LEG, problem = 79}),(43,66,BonusDef {position = Point {x = 75, y = 14}, bonus = BREAK_A_LEG, problem = 66}),(44,88,BonusDef {position = Point {x = 19, y = 1}, bonus = BREAK_A_LEG, problem = 88}),(45,25,BonusDef {position = Point {x = 60, y = 7}, bonus = GLOBALIST, problem = 25}),(46,28,BonusDef {position = Point {x = 43, y = 44}, bonus = BREAK_A_LEG, problem = 28}),(47,43,BonusDef {position = Point {x = 59, y = 26}, bonus = BREAK_A_LEG, problem = 43}),(48,11,BonusDef {position = Point {x = 0, y = 67}, bonus = BREAK_A_LEG, problem = 11}),(49,36,BonusDef {position = Point {x = 24, y = 16}, bonus = BREAK_A_LEG, problem = 36}),(50,9,BonusDef {position = Point {x = 0, y = 8}, bonus = GLOBALIST, problem = 9}),(51,71,BonusDef {position = Point {x = 44, y = 46}, bonus = BREAK_A_LEG, problem = 71}),(52,55,BonusDef {position = Point {x = 61, y = 21}, bonus = GLOBALIST, problem = 55}),(53,38,BonusDef {position = Point {x = 65, y = 48}, bonus = GLOBALIST, problem = 38}),(54,24,BonusDef {position = Point {x = 47, y = 27}, bonus = GLOBALIST, problem = 24}),(55,7,BonusDef {position = Point {x = 39, y = 58}, bonus = GLOBALIST, problem = 7}),(56,50,BonusDef {position = Point {x = 1, y = 95}, bonus = GLOBALIST, problem = 50}),(57,33,BonusDef {position = Point {x = 19, y = 122}, bonus = GLOBALIST, problem = 33}),(58,68,BonusDef {position = Point {x = 104, y = 53}, bonus = GLOBALIST, problem = 68}),(59,3,BonusDef {position = Point {x = 88, y = 64}, bonus = BREAK_A_LEG, problem = 3}),(60,80,BonusDef {position = Point {x = 78, y = 95}, bonus = GLOBALIST, problem = 80}),(61,20,BonusDef {position = Point {x = 9, y = 126}, bonus = BREAK_A_LEG, problem = 20}),(62,22,BonusDef {position = Point {x = 237, y = 151}, bonus = GLOBALIST, problem = 22}),(63,21,BonusDef {position = Point {x = 106, y = 65}, bonus = BREAK_A_LEG, problem = 21}),(64,85,BonusDef {position = Point {x = 150, y = 77}, bonus = GLOBALIST, problem = 85}),(65,42,BonusDef {position = Point {x = 143, y = 246}, bonus = BREAK_A_LEG, problem = 42}),(66,34,BonusDef {position = Point {x = 105, y = 3}, bonus = GLOBALIST, problem = 34}),(67,5,BonusDef {position = Point {x = 8, y = 45}, bonus = GLOBALIST, problem = 5}),(68,69,BonusDef {position = Point {x = 33, y = 85}, bonus = BREAK_A_LEG, problem = 69}),(69,70,BonusDef {position = Point {x = 106, y = 85}, bonus = GLOBALIST, problem = 70}),(70,61,BonusDef {position = Point {x = 54, y = 31}, bonus = BREAK_A_LEG, problem = 61}),(71,87,BonusDef {position = Point {x = 285, y = 150}, bonus = BREAK_A_LEG, problem = 87}),(72,40,BonusDef {position = Point {x = 164, y = 153}, bonus = GLOBALIST, problem = 40}),(73,86,BonusDef {position = Point {x = 20, y = 58}, bonus = BREAK_A_LEG, problem = 86}),(74,77,BonusDef {position = Point {x = 204, y = 285}, bonus = BREAK_A_LEG, problem = 77}),(75,81,BonusDef {position = Point {x = 57, y = 160}, bonus = BREAK_A_LEG, problem = 81}),(76,64,BonusDef {position = Point {x = 16, y = 98}, bonus = BREAK_A_LEG, problem = 64}),(77,83,BonusDef {position = Point {x = 77, y = 30}, bonus = GLOBALIST, problem = 83}),(78,56,BonusDef {position = Point {x = 15, y = 100}, bonus = BREAK_A_LEG, problem = 56}),(79,1,BonusDef {position = Point {x = 0, y = 209}, bonus = GLOBALIST, problem = 1}),(80,13,BonusDef {position = Point {x = 195, y = 171}, bonus = GLOBALIST, problem = 13}),(81,27,BonusDef {position = Point {x = 27, y = 43}, bonus = BREAK_A_LEG, problem = 27}),(82,2,BonusDef {position = Point {x = 194, y = 218}, bonus = GLOBALIST, problem = 2}),(83,44,BonusDef {position = Point {x = 75, y = 2}, bonus = GLOBALIST, problem = 44}),(84,52,BonusDef {position = Point {x = 40, y = 98}, bonus = GLOBALIST, problem = 52}),(85,48,BonusDef {position = Point {x = 60, y = 62}, bonus = BREAK_A_LEG, problem = 48}),(86,51,BonusDef {position = Point {x = 69, y = 97}, bonus = BREAK_A_LEG, problem = 51}),(87,26,BonusDef {position = Point {x = 207, y = 205}, bonus = GLOBALIST, problem = 26}),(88,59,BonusDef {position = Point {x = 115, y = 101}, bonus = GLOBALIST, problem = 59}),(89,18,BonusDef {position = Point {x = 93, y = 84}, bonus = GLOBALIST, problem = 18}),(89,103,BonusDef {position = Point {x = 87, y = 111}, bonus = BREAK_A_LEG, problem = 103}),(91,93,BonusDef {position = Point {x = 27, y = 120}, bonus = GLOBALIST, problem = 93}),(92,99,BonusDef {position = Point {x = 96, y = 12}, bonus = BREAK_A_LEG, problem = 99}),(93,86,BonusDef {position = Point {x = 27, y = 72}, bonus = GLOBALIST, problem = 86}),(93,90,BonusDef {position = Point {x = 54, y = 108}, bonus = GLOBALIST, problem = 90}),(95,101,BonusDef {position = Point {x = 189, y = 66}, bonus = BREAK_A_LEG, problem = 101}),(99,25,BonusDef {position = Point {x = 66, y = 69}, bonus = GLOBALIST, problem = 25}),(99,91,BonusDef {position = Point {x = 93, y = 51}, bonus = BREAK_A_LEG, problem = 91}),(101,84,BonusDef {position = Point {x = 97, y = 160}, bonus = BREAK_A_LEG, problem = 84}),(103,3,BonusDef {position = Point {x = 168, y = 36}, bonus = BREAK_A_LEG, problem = 3}),(103,104,BonusDef {position = Point {x = 162, y = 6}, bonus = GLOBALIST, problem = 104}),(106,94,BonusDef {position = Point {x = 270, y = 651}, bonus = BREAK_A_LEG, problem = 94})]
>>> G.labEdges . G.emap (const ()) <$> bonusdepg
[(1,35,()),(2,39,()),(3,60,()),(4,63,()),(5,78,()),(6,16,()),(7,12,()),(8,6,()),(9,14,()),(10,62,()),(11,31,()),(12,67,()),(13,46,()),(14,57,()),(15,41,()),(16,8,()),(17,84,()),(18,72,()),(19,32,()),(20,49,()),(21,17,()),(22,74,()),(23,18,()),(24,73,()),(25,30,()),(26,19,()),(27,23,()),(28,65,()),(29,58,()),(30,10,()),(31,75,()),(32,29,()),(33,53,()),(34,4,()),(35,47,()),(36,82,()),(37,15,()),(38,76,()),(39,37,()),(40,45,()),(41,54,()),(42,79,()),(43,66,()),(44,88,()),(45,25,()),(46,28,()),(47,43,()),(48,11,()),(49,36,()),(50,9,()),(51,71,()),(52,55,()),(53,38,()),(54,24,()),(55,7,()),(56,50,()),(57,33,()),(58,68,()),(59,3,()),(60,80,()),(61,20,()),(62,22,()),(63,21,()),(64,85,()),(65,42,()),(66,34,()),(67,5,()),(68,69,()),(69,70,()),(70,61,()),(71,87,()),(72,40,()),(73,86,()),(74,77,()),(75,81,()),(76,64,()),(77,83,()),(78,56,()),(79,1,()),(80,13,()),(81,27,()),(82,2,()),(83,44,()),(84,52,()),(85,48,()),(86,51,()),(87,26,()),(88,59,()),(89,18,()),(89,103,()),(91,93,()),(92,99,()),(93,86,()),(93,90,()),(95,101,()),(99,25,()),(99,91,()),(101,84,()),(103,3,()),(103,104,()),(106,94,())]
-}
getBonusDeps :: FilePath -> Int -> IO (G.Gr () P.BonusDef)
getBonusDeps path n = loop path n 1 ig
  where
    ig = G.mkGraph (zip [1 .. n] (repeat ())) []

loop :: FilePath -> Int -> Int -> G.Gr () P.BonusDef -> IO (G.Gr () P.BonusDef)
loop path no count g = if 
  | no < count -> return g
  | otherwise  -> do 
      { mprob <- getProblem path count
      ; loop path no (succ count) (G.insEdges (bonusEdges count mprob) g)
      }

getProblem :: FilePath -> Int -> IO (Maybe P.Problem)
getProblem path n = readProblem (path </> name)
  where
    name = printf "%03d.json" n

bonusEdges :: G.Node -> Maybe P.Problem -> [G.LEdge P.BonusDef]
bonusEdges n = \ case
  Nothing -> []
  Just pb -> case P.bonuses pb of
    Nothing -> []
    Just bs -> map (bonusDef2Edge n) bs
  where
    bonusDef2Edge n def = (n, P.problem def, def)
